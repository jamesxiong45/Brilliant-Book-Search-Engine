[{"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\index.js":"1","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\App.js":"2","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\pages\\SearchBooks.js":"4","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\components\\Navbar.js":"5","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\auth.js":"6","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\components\\SignupForm.js":"8","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\mutations.js":"9","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\queries.js":"10","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\API.js":"11","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\localStorage.js":"12"},{"size":266,"mtime":1683596266792,"results":"13","hashOfConfig":"14"},{"size":1296,"mtime":1684469343378,"results":"15","hashOfConfig":"14"},{"size":2361,"mtime":1684473726725,"results":"16","hashOfConfig":"14"},{"size":4274,"mtime":1684473925506,"results":"17","hashOfConfig":"14"},{"size":2567,"mtime":1683596266791,"results":"18","hashOfConfig":"14"},{"size":1234,"mtime":1683596266794,"results":"19","hashOfConfig":"14"},{"size":2646,"mtime":1684474214219,"results":"20","hashOfConfig":"14"},{"size":3314,"mtime":1684474355121,"results":"21","hashOfConfig":"14"},{"size":1244,"mtime":1684467735850,"results":"22","hashOfConfig":"14"},{"size":680,"mtime":1684474900732,"results":"23","hashOfConfig":"14"},{"size":1392,"mtime":1683596266793,"results":"24","hashOfConfig":"14"},{"size":793,"mtime":1683596266794,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1bbradz",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\index.js",[],[],[],"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\App.js",[],[],"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\pages\\SavedBooks.js",[],[],"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\pages\\SearchBooks.js",[],[],"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\auth.js",["66"],[],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\components\\LoginForm.js",["67"],[],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from '../utils/auth';\nimport { useMutation } from \"@apollo/client\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(error);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\components\\SignupForm.js",["68"],[],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport {ADD_USER} from \"../utils/mutations\";\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  \n  const [ addUser, {error, data }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(error);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\mutations.js",[],[],"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\queries.js",[],[],"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\API.js",[],[],"C:\\Users\\james\\bootcamp\\repos\\Brilliant-Book-Search-Engine\\client\\src\\utils\\localStorage.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":49,"column":1,"nodeType":"71","endLine":49,"endColumn":34},{"ruleId":"72","severity":1,"message":"73","line":13,"column":26,"nodeType":"74","messageId":"75","endLine":13,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":15,"column":28,"nodeType":"74","messageId":"75","endLine":15,"endColumn":32},"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]